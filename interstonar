#!/usr/bin/env python3

"""
INTERSTONAR - Main entry point
Rock trajectory simulation in local and global scenes
"""

import sys
from src.core.errors import InterstonarException, handle_error
from src.parsing.arguments import parse_arguments
from src.parsing.config import parse_config
from src.global_mode.simulation import run_global_simulation
from src.local_mode.simulation import run_local_simulation


def main():
    """Main function for the Interstonar program."""
    try:
        # Parse command line arguments
        args = parse_arguments()
        mode = args["mode"]
        config_file = args["config_file"]
        position = args["position"]
        velocity = args["velocity"]

        # Parse the configuration file
        bodies = parse_config(config_file, mode)

        # Run the appropriate simulation based on mode
        if mode == "--global":
            print(f"Mode: {mode}")
            print(f"Config file: {config_file}")
            print(f"Initial position: ({position['x']}, {position['y']}, {position['z']})")
            print(f"Initial velocity: ({velocity['x']}, {velocity['y']}, {velocity['z']})")

            # Run the global simulation (to be implemented)
            result = run_global_simulation(bodies, position, velocity)

        elif mode == "--local":
            print(f"Rock thrown at the point ({position['x']:.2f}, {position['y']:.2f}, {position['z']:.2f}) and parallel to the vector ({velocity['x']:.2f}, {velocity['y']:.2f}, {velocity['z']:.2f})")

            # Display information about bodies in the scene
            for body in bodies:
                if body["type"] == "sphere":
                    print(f"Sphere of radius {body['radius']:.2f} at position ({body['position']['x']:.2f}, {body['position']['y']:.2f}, {body['position']['z']:.2f})")
                elif body["type"] == "cylinder":
                    height_str = f"and height {body['height']:.2f}" if "height" in body else ""
                    print(f"Cylinder of radius {body['radius']:.2f} {height_str} at position ({body['position']['x']:.2f}, {body['position']['y']:.2f}, {body['position']['z']:.2f})")
                elif body["type"] == "box":
                    print(f"Box of dimensions ({body['sides']['x']:.2f}, {body['sides']['y']:.2f}, {body['sides']['z']:.2f}) at position ({body['position']['x']:.2f}, {body['position']['y']:.2f}, {body['position']['z']:.2f})")
                elif body["type"] == "torus":
                    print(f"Torus of inner radius {body['inner_radius']:.2f} and outer radius {body['outer_radius']:.2f} at position ({body['position']['x']:.2f}, {body['position']['y']:.2f}, {body['position']['z']:.2f})")

            # Run the local simulation (to be implemented)
            result = run_local_simulation(bodies, position, velocity)

    except InterstonarException as e:
        handle_error(e.message)
    except Exception as e:
        handle_error(str(e))


if __name__ == "__main__":
    main()
